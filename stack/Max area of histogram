#include <iostream>
#include <vector>
#include <climits>
#include <stack>
#include <algorithm>
using namespace std;
vector<int> nsl(vector<int>arr)
{
    stack<pair<int,int>>s;
    vector<int>v;
    for (int i=0;i<arr.size();i++)
    {
        if (s.size()==0)
        {
            v.push_back(-1);
        }
       else if (s.size()>0 && s.top().first<arr[i])
        {
            v.push_back(s.top().second);
        }
        else if (s.size()>0 && s.top().first>=arr[i])
        {
            while(s.size()>0 && s.top().first>=arr[i])
            {
                s.pop();
            }
            if (s.size()==0)
                v.push_back(-1);
            else
            v.push_back(s.top().second);
        }
        s.push({arr[i],i});
    }
    return v;
}
vector<int> nsr(vector<int>arr)
{
    stack<pair<int,int>>s;
    vector<int>v;
    for (int i=arr.size()-1;i>=0;i--)
    {
        if (s.size()==0)
        {
            v.push_back(arr.size());
        }
       else if (s.size()>0 && s.top().first<arr[i])
        {
            v.push_back(s.top().second);
        }
        else if (s.size()>0 && s.top().first>=arr[i])
        {
            while(s.size()>0 && s.top().first>=arr[i])
            {
                s.pop();
            }
            if (s.size()==0)
                v.push_back(arr.size());
            else
            v.push_back(s.top().second);
        }
        s.push({arr[i],i});
    }
    reverse(v.begin(),v.end());
    return v;
}
int MAH(vector<int>arr)
{
    vector<int>right=nsr(arr);
    vector<int>left=nsl(arr);
    int area=0;
    for (int i=0;i<arr.size();i++)
    {
        area = max(area, arr[i]*(right[i]-left[i]-1));
    }
    return area;
}
int main()
{
    vector<int>arr;
    int n,x;
    cin>>n;
    for (int i=0;i<n;i++)
    {
        cin>>x;
        arr.push_back(x);
    }//6 2 5 4 5 1 6 =>12
    cout<<MAH(arr);
    
    return 0;
}
