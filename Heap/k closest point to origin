#include <iostream>
#include<climits>
#include<vector>
#include<algorithm>
#include<queue>
using namespace std;
void k_closest_pt_to_origin(vector<vector<int>>arr,int k)
{
    priority_queue<pair<int,pair<int,int>>>maxh;
    int n=arr.size();
    for (int i=0;i<n;i++)
    {
        maxh.push( { arr[i][0]*arr[i][0]+arr[i][1]*arr[i][1] , { arr[i][0],arr[i][1] } } );
        if (maxh.size()>k)
        {
            maxh.pop();
        }
    }
    while(maxh.size()>0)
    {
        pair<int,int>p;
        p=maxh.top().second;
        cout<<p.first<<" "<<p.second<<endl;
        maxh.pop();
    }
}
int main()
{
    int n,x;
    cin>>n;
    vector<vector<int>>arr;
    for(int i=0;i<n;i++)
    {
        vector<int>v;
        for(int j=0;j<2;j++)
        {
            cin>>x;
            v.push_back(x);
        }
        arr.push_back(v);
    }
    /*arr={
        {1,2},
        {-2,2},
        {3,-5},
        {2,-8}
    };*/
    int k;
    cin>>k;
    k_closest_pt_to_origin(arr,k);
    return 0;
}
